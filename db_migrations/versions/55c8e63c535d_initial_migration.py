"""Initial migration

Revision ID: 55c8e63c535d
Revises: 
Create Date: 2024-11-02 13:35:44.597888+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '55c8e63c535d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assessments',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sa.Unicode(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('buckets',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('bucket', sa.String(length=63), nullable=False),
    sa.Column('key', sa.Unicode(length=1024), nullable=False),
    sa.Column('content_type', sa.Enum('IMAGE', 'VIDEO', name='mediatype'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bucket', 'key')
    )
    op.create_table('multiple_choices',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('random', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('task_type', sa.String(length=8), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('texts',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('text', sa.UnicodeText(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessments_tasks',
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Uuid(), nullable=False),
    sa.Column('task_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('assessment_id', 'task_id'),
    sa.UniqueConstraint('assessment_id', 'position')
    )
    op.create_table('choices',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('bucket_id', sa.Uuid(), nullable=True),
    sa.Column('text_id', sa.Uuid(), nullable=True),
    sa.Column('multiple_choice_id', sa.Uuid(), nullable=False),
    sa.CheckConstraint('text_id IS NOT NULL AND bucket_id IS NULL OR text_id IS NULL AND bucket_id IS NOT NULL', name='check_choice_text_or_bucket'),
    sa.ForeignKeyConstraint(['bucket_id'], ['buckets.id'], ),
    sa.ForeignKeyConstraint(['multiple_choice_id'], ['multiple_choices.id'], ),
    sa.ForeignKeyConstraint(['text_id'], ['texts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('multiple_choice_id', 'position')
    )
    op.create_table('exercises',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('bucket_id', sa.Uuid(), nullable=True),
    sa.Column('text_id', sa.Uuid(), nullable=True),
    sa.Column('multiple_choice_id', sa.Uuid(), nullable=False),
    sa.CheckConstraint('text_id IS NOT NULL AND bucket_id IS NULL OR text_id IS NULL AND bucket_id IS NOT NULL', name='check_exercise_text_or_bucket'),
    sa.ForeignKeyConstraint(['bucket_id'], ['buckets.id'], ),
    sa.ForeignKeyConstraint(['id'], ['tasks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['multiple_choice_id'], ['multiple_choices.id'], ),
    sa.ForeignKeyConstraint(['text_id'], ['texts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('primers',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('bucket_id', sa.Uuid(), nullable=True),
    sa.Column('text_id', sa.Uuid(), nullable=True),
    sa.CheckConstraint('text_id IS NOT NULL AND bucket_id IS NULL OR text_id IS NULL AND bucket_id IS NOT NULL', name='check_primer_text_or_bucket'),
    sa.ForeignKeyConstraint(['bucket_id'], ['buckets.id'], ),
    sa.ForeignKeyConstraint(['id'], ['tasks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['text_id'], ['texts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submissions',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('submission_type', sa.String(length=26), nullable=False),
    sa.Column('user_name', sa.String(length=36), nullable=False),
    sa.Column('exercise_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('multiple_choice_submissions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('multiple_choice_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['submissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['multiple_choice_id'], ['multiple_choices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('text_submissions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['submissions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('multiple_choice_submissions_choices',
    sa.Column('submission_id', sa.Uuid(), nullable=False),
    sa.Column('choice_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['choice_id'], ['choices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['submission_id'], ['multiple_choice_submissions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('submission_id', 'choice_id'),
    sa.UniqueConstraint('submission_id', 'choice_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('multiple_choice_submissions_choices')
    op.drop_table('text_submissions')
    op.drop_table('multiple_choice_submissions')
    op.drop_table('submissions')
    op.drop_table('primers')
    op.drop_table('exercises')
    op.drop_table('choices')
    op.drop_table('assessments_tasks')
    op.drop_table('texts')
    op.drop_table('tasks')
    op.drop_table('multiple_choices')
    op.drop_table('buckets')
    op.drop_table('assessments')
    # ### end Alembic commands ###
