[tool.poetry]
name = "backend"
version = "0.1.0"
description = "SLAS - SLPortal Backend"
authors = ["Danny Rehl", "Dustin Heckmann"]
license = "GPLv3"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = {version = "^0.109", extras = ["all"]}
pyjwt = {version = "^2.8", extras = ["crypto"]}
minio = "^7.1"
python-multipart = "^0.0"
pydantic-settings = "^2.0"
sqlalchemy = "^2.0"
psycopg2-binary = "^2.9"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7"
coverage = "^7.3"
isort = "^5.12"
mypy = "^1.5"
pylint = "^2.17"
pytest = "^7.4"
pytest-asyncio = "^0.21"
gevent = "^23.9"
freezegun = "^1.2"
testcontainers = "^4.8.1"
pytz = "^2024.2"

[tool.bandit]
exclude_dirs = ["tests", ".venv"]

[tool.coverage.run]
concurrency = ["thread", "gevent"]

[tool.isort]
line_length = 100
order_by_type = false

[[tool.mypy.overrides]]
module = "fastapi_auth_middleware"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "minio"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "minio.datatypes"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "minio.error"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "decouple"
ignore_missing_imports = true

[tool.pylint.basic]
good-names= """
    id,
    _,
"""

[tool.pylint."MESSAGES CONTROL"]
disable= """
    fixme,
    missing-class-docstring,
    missing-function-docstring,
    missing-module-docstring,
    too-few-public-methods,
    too-many-instance-attributes,
"""

[tool.pylint.format]
max-line-length = 120

[tool.pylint.master]
extension-pkg-whitelist = "pydantic"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "-rA",
    "--tb=long",
    "--junitxml=./pytest-results.xml"
]
console_output_style = "count"
junit_family = "xunit2"

[tool.pytest_env]
SLPORTAL_ENV = "testing"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
