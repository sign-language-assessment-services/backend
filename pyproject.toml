[tool.poetry]
name = "backend"
version = "0.1.0"
description = "SLAS - SLPortal Backend"
authors = ["Danny Rehl", "Dustin Heckmann"]
license = "GPLv3"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = {version = "^0.95.0", extras = ["all"]}
fastapi-auth-middleware = "^1.0.2"
pyjwt = {version = "^2.6.0", extras = ["crypto"]}
python-dotenv = "^1.0.0"
minio = "^7.1.13"
python-multipart = "^0.0.6"
python-decouple = "^3.8"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.5"
coverage = "^7.2.2"
isort = "^5.12.0"
mypy = "^1.1.1"
pylint = "^2.15.0"
pytest = "^7.1.2"

[tool.bandit]
exclude_dirs = ["tests", ".venv"]

[tool.isort]
line_length = 100

[[tool.mypy.overrides]]
module = "fastapi_auth_middleware"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "minio"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "decouple"
ignore_missing_imports = true

[tool.pylint."MESSAGES CONTROL"]
disable= """
   missing-class-docstring,
   missing-function-docstring,
   missing-module-docstring,
   too-few-public-methods,
"""

[tool.pylint.format]
max-line-length = 120

[tool.pylint.master]
extension-pkg-whitelist = "pydantic"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "-rA",
    "--tb=long",
    "--junitxml=./pytest-results.xml"
]
console_output_style = "count"
junit_family = "xunit2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
